
-- Nyní DROP samotných tabulek v pořadí, které neruší integritu
DROP TABLE IF EXISTS EntryHistory;
DROP TABLE IF EXISTS TransactionHistory;
DROP TABLE IF EXISTS UserOneTimeEntries;
DROP TABLE IF EXISTS UserSubscriptions;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS OneTimeEntries;
DROP TABLE IF EXISTS Subscriptions;
DROP TABLE IF EXISTS Cards;
DROP TABLE IF EXISTS Employees;


-- Zaměstnanci
CREATE TABLE Employees (
                           IDEmployee INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           Username VARCHAR(100),
                           Firstname VARCHAR(100),
                           Lastname VARCHAR(100),
    -- V praxi sem patří hash hesla, nikoli heslo v plaintextu
                           Password VARCHAR(100),
                           Role VARCHAR(15) NULL,
                           CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Karty
CREATE TABLE Cards (
                       CardID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       CardNumber VARCHAR(50) UNIQUE,
                       Lost BOOLEAN NULL,
                       CardType VARCHAR(50) NULL
);

-- Hlavní typy subscription (1 měsíc, 3 měsíce, půlrok, rok)
CREATE TABLE Subscriptions (
                               SubscriptionID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               SubscriptionType VARCHAR(50) NOT NULL,    -- Např. "Měsíční"
                               DurationMonths INT NOT NULL,             -- 1, 3, 6, 12...
                               Price DECIMAL(10, 2) NOT NULL            -- 990, 3000, 6000, ...
);

-- Seznam jednorázových vstupů (např. "standard entry", "student entry", apod.)
CREATE TABLE OneTimeEntries (
                                OneTimeEntryID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                EntryName VARCHAR(50),
                                Price DECIMAL(10, 2)
);

-- Uživatelé
CREATE TABLE Users (
                       UserID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       Firstname VARCHAR(50),
                       Lastname VARCHAR(50),
                       Email VARCHAR(100) UNIQUE,
    -- V praxi sem patří hash hesla, nikoli heslo v plaintextu
                       Password VARCHAR(255) NULL,
                       Birthdate DATE,
                       Profile_photo VARCHAR(200) NULL,
                       ID_Card INT UNIQUE,          -- Každý uživatel může mít právě jednu kartu
                       ID_Subscription INT UNIQUE,  -- ID aktivní subscription, pokud nějakou má
                       RealUser BOOLEAN DEFAULT TRUE,
                       CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                       CONSTRAINT fk_user_card
                           FOREIGN KEY (ID_Card) REFERENCES Cards(CardID) ON DELETE SET NULL
);

-- Konkrétní subscription, které si uživatel zakoupil
CREATE TABLE UserSubscriptions (
                                   UserSubscriptionID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   UserID INT,
                                   SubscriptionID INT,            -- Odkaz na "Měsíční", "Roční" atd.
                                   StartDate DATE,
                                   EndDate DATE,
                                   IsActive BOOLEAN DEFAULT FALSE,
                                   FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
                                   FOREIGN KEY (SubscriptionID) REFERENCES Subscriptions(SubscriptionID)
);

-- Tady navážeme aktivní subscription v Users -> ID_Subscription
ALTER TABLE Users
    ADD CONSTRAINT fk_user_subscription
        FOREIGN KEY (ID_Subscription)
            REFERENCES UserSubscriptions(UserSubscriptionID) ON DELETE SET NULL;

-- Jednorázové vstupy zakoupené konkrétním uživatelem
CREATE TABLE UserOneTimeEntries (
                                    UserOneTimeEntryID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    UserID INT,
                                    OneTimeEntryID INT,
                                    PurchaseDate DATE,
                                    IsUsed BOOLEAN DEFAULT FALSE,
                                    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE SET NULL,
                                    FOREIGN KEY (OneTimeEntryID) REFERENCES OneTimeEntries(OneTimeEntryID)
);

-- Historie transakcí (nákup předplatného nebo jednorázového vstupu)
CREATE TABLE TransactionHistory (
                                    TransactionID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    UserID INT,
                                    TransactionDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                    Amount DECIMAL(10, 2),
                                    Description VARCHAR(255),
                                    PurchaseType VARCHAR(50),  -- 'Subscription' nebo 'OneTimeEntry'
                                    UserSubscriptionID INT,    -- odkaz na KONKRÉTNÍ zakoupenou subscription (v tabulce UserSubscriptions)
                                    OneTimeEntryID INT,        -- odkaz na KONKRÉTNÍ jednorázový vstup (UserOneTimeEntries)
                                    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE SET NULL,
                                    FOREIGN KEY (UserSubscriptionID) REFERENCES UserSubscriptions(UserSubscriptionID),
                                    FOREIGN KEY (OneTimeEntryID) REFERENCES UserOneTimeEntries(UserOneTimeEntryID)
);

-- Historie fyzických vstupů do posilovny
CREATE TABLE EntryHistory (
                              EntryID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              UserID INT,
                              EntryDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                              EntryType VARCHAR(50),  -- 'Subscription' nebo 'OneTimeEntry'
                              FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE SET NULL
);


-- Vložíme pár zaměstnanců
INSERT INTO Employees (Username, Firstname, Lastname, Password, Role)
VALUES
    ('svarasim', 'Šimon', 'Švára', 'abc', 'Admin'),
    ('eva', 'Eva', 'Svobodová', 'bezpecneHeslo', 'Employee');

-- Vložíme pár uživatelů
INSERT INTO Users (Firstname, Lastname, Email, Password, Birthdate)
VALUES
    ('Šimon', 'Švára', 'simonsvara@gmail.com', '', '2002-01-08'),
    ('Jan', 'Novák', 'jan.novak@email.com', '', '1990-01-01'),
    ('Eva', 'Svobodová', 'eva.svobodova@email.com', '', '1992-02-02'),
    ('Petr', 'Kříž', 'petr.kriz@email.com', '', '1988-03-03');
-- ... a klidně další, pokud potřebuješ

-- Typy subscription: měsíční, 3-měsíční, půlroční, roční
INSERT INTO Subscriptions (SubscriptionType, DurationMonths, Price)
VALUES
    ('Měsíční', 1, 990),
    ('3 měsíční', 3, 3000),
    ('Půl roční', 6, 6000),
    ('Roční', 12, 12000);

-- Jednorázové vstupy
INSERT INTO OneTimeEntries (EntryName, Price)
VALUES
    ('standard entry', 100),
    ('student entry', 90);

-- Vložíme záznamy do tabulky UserSubscriptions (uživatelé si koupili konkrétní předplatné)
-- Např. userID=1 -> SubscriptionID=1 (Měsíční), userID=2 -> SubscriptionID=2 (3 měsíční)
INSERT INTO UserSubscriptions (UserID, SubscriptionID, StartDate, EndDate, IsActive)
VALUES
    (1, 1, '2024-01-01', '2024-01-31', TRUE),
    (2, 2, '2024-02-01', '2024-04-30', TRUE);

-- Nastavíme v tabulce Users, že user 1 a user 2 mají aktivní subscription = takový, co jsme právě vložili
-- Tady se díváme na to, jaké ID dostaly předchozí inserty.
-- Při auto_increment se obvykle userSubscriptionID=1 pro prvního, userSubscriptionID=2 pro druhého.
UPDATE Users
SET ID_Subscription = 1
WHERE UserID = 1;

UPDATE Users
SET ID_Subscription = 2
WHERE UserID = 2;

-- Jednorázové vstupy zakoupené uživateli 1 a 2
INSERT INTO UserOneTimeEntries (UserID, OneTimeEntryID, PurchaseDate, IsUsed)
VALUES
    (1, 1, '2024-03-01', FALSE),
    (1, 1, '2024-03-02', FALSE),
    (2, 1, '2024-03-01', FALSE);

-- Transakce (nákupy)
--  - Subscription = odkaz na UserSubscriptionID (např. 1 => Měsíční, 2 => 3 měsíční)
--  - OneTimeEntry = odkaz na UserOneTimeEntryID
INSERT INTO TransactionHistory (UserID, Amount, Description, PurchaseType, UserSubscriptionID)
VALUES
    (1, 990.00, 'Zakoupení měsíčního předplatného', 'Subscription', 1),
    (2, 3000.00, 'Zakoupení 3měsíčního předplatného', 'Subscription', 2);

-- Jednorázové vstupy (předpokládám ID=1 => 1. řádek v tabulce UserOneTimeEntries, ID=2 => 2. řádek)
INSERT INTO TransactionHistory (UserID, Amount, Description, PurchaseType, OneTimeEntryID)
VALUES
    (1, 100.00, 'Zakoupení jednorázového vstupu', 'OneTimeEntry', 1),
    (1, 100.00, 'Zakoupení jednorázového vstupu', 'OneTimeEntry', 2),
    (2, 100.00, 'Zakoupení jednorázového vstupu', 'OneTimeEntry', 3);

-- Zaznamenáme pár reálných vstupů
INSERT INTO EntryHistory (UserID, EntryDate, EntryType)
VALUES
    (1, '2024-03-03', 'OneTimeEntry'),
    (1, '2024-01-15', 'Subscription'),
    (2, '2024-02-15', 'Subscription');
